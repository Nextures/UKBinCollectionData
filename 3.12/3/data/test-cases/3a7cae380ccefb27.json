{"uid":"3a7cae380ccefb27","name":"Validate Council Output [GatesheadCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"3a7171e6de629587a3f0d32410302b35","time":{"start":1722988770292,"stop":1722988859399,"duration":89107},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55de638e36ba <unknown>\n#1 0x55de635b3730 <unknown>\n#2 0x55de63602d9b <unknown>\n#3 0x55de63603081 <unknown>\n#4 0x55de63646cd4 <unknown>\n#5 0x55de63625a7d <unknown>\n#6 0x55de636441ca <unknown>\n#7 0x55de636257f3 <unknown>\n#8 0x55de635f5ec9 <unknown>\n#9 0x55de635f691e <unknown>\n#10 0x55de638a99eb <unknown>\n#11 0x55de638ad972 <unknown>\n#12 0x55de63896e15 <unknown>\n#13 0x55de638ae502 <unknown>\n#14 0x55de6387bd2f <unknown>\n#15 0x55de638d2578 <unknown>\n#16 0x55de638d2750 <unknown>\n#17 0x55de638e248c <unknown>\n#18 0x7f4b7f7c5a94 <unknown>\n#19 0x7f4b7f852a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f61f1e1e480>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f6205672000>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:35: in parse_data\n    accept_button = WebDriverWait(driver, timeout=30).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2f546b20777c8e0ed62ae76beb1accc9\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f61f17b2ac0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55de638e36ba <unknown>\nE       #1 0x55de635b3730 <unknown>\nE       #2 0x55de63602d9b <unknown>\nE       #3 0x55de63603081 <unknown>\nE       #4 0x55de63646cd4 <unknown>\nE       #5 0x55de63625a7d <unknown>\nE       #6 0x55de636441ca <unknown>\nE       #7 0x55de636257f3 <unknown>\nE       #8 0x55de635f5ec9 <unknown>\nE       #9 0x55de635f691e <unknown>\nE       #10 0x55de638a99eb <unknown>\nE       #11 0x55de638ad972 <unknown>\nE       #12 0x55de63896e15 <unknown>\nE       #13 0x55de638ae502 <unknown>\nE       #14 0x55de6387bd2f <unknown>\nE       #15 0x55de638d2578 <unknown>\nE       #16 0x55de638d2750 <unknown>\nE       #17 0x55de638e248c <unknown>\nE       #18 0x7f4b7f7c5a94 <unknown>\nE       #19 0x7f4b7f852a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55de638e36ba <unknown>\n#1 0x55de635b3730 <unknown>\n#2 0x55de63602d9b <unknown>\n#3 0x55de63603081 <unknown>\n#4 0x55de63646cd4 <unknown>\n#5 0x55de63625a7d <unknown>\n#6 0x55de636441ca <unknown>\n#7 0x55de636257f3 <unknown>\n#8 0x55de635f5ec9 <unknown>\n#9 0x55de635f691e <unknown>\n#10 0x55de638a99eb <unknown>\n#11 0x55de638ad972 <unknown>\n#12 0x55de63896e15 <unknown>\n#13 0x55de638ae502 <unknown>\n#14 0x55de6387bd2f <unknown>\n#15 0x55de638d2578 <unknown>\n#16 0x55de638d2750 <unknown>\n#17 0x55de638e248c <unknown>\n#18 0x7f4b7f7c5a94 <unknown>\n#19 0x7f4b7f852a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f61f1e1e480>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f6205672000>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:35: in parse_data\n    accept_button = WebDriverWait(driver, timeout=30).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2f546b20777c8e0ed62ae76beb1accc9\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f61f17b2ac0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55de638e36ba <unknown>\nE       #1 0x55de635b3730 <unknown>\nE       #2 0x55de63602d9b <unknown>\nE       #3 0x55de63603081 <unknown>\nE       #4 0x55de63646cd4 <unknown>\nE       #5 0x55de63625a7d <unknown>\nE       #6 0x55de636441ca <unknown>\nE       #7 0x55de636257f3 <unknown>\nE       #8 0x55de635f5ec9 <unknown>\nE       #9 0x55de635f691e <unknown>\nE       #10 0x55de638a99eb <unknown>\nE       #11 0x55de638ad972 <unknown>\nE       #12 0x55de63896e15 <unknown>\nE       #13 0x55de638ae502 <unknown>\nE       #14 0x55de6387bd2f <unknown>\nE       #15 0x55de638d2578 <unknown>\nE       #16 0x55de638d2750 <unknown>\nE       #17 0x55de638e248c <unknown>\nE       #18 0x7f4b7f7c5a94 <unknown>\nE       #19 0x7f4b7f852a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","steps":[{"name":"Given the council","time":{"start":1722988770292,"stop":1722988770293,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1722988770293,"stop":1722988859399,"duration":89106},"status":"failed","statusMessage":"Message: \nStacktrace:\n#0 0x55de638e36ba <unknown>\n#1 0x55de635b3730 <unknown>\n#2 0x55de63602d9b <unknown>\n#3 0x55de63603081 <unknown>\n#4 0x55de63646cd4 <unknown>\n#5 0x55de63625a7d <unknown>\n#6 0x55de636441ca <unknown>\n#7 0x55de636257f3 <unknown>\n#8 0x55de635f5ec9 <unknown>\n#9 0x55de635f691e <unknown>\n#10 0x55de638a99eb <unknown>\n#11 0x55de638ad972 <unknown>\n#12 0x55de63896e15 <unknown>\n#13 0x55de638ae502 <unknown>\n#14 0x55de6387bd2f <unknown>\n#15 0x55de638d2578 <unknown>\n#16 0x55de638d2750 <unknown>\n#17 0x55de638e248c <unknown>\n#18 0x7f4b7f7c5a94 <unknown>\n#19 0x7f4b7f852a34 __clone\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55de638e36ba <unknown>\n#1 0x55de635b3730 <unknown>\n#2 0x55de63602d9b <unknown>\n#3 0x55de63603081 <unknown>\n#4 0x55de63646cd4 <unknown>\n#5 0x55de63625a7d <unknown>\n#6 0x55de636441ca <unknown>\n#7 0x55de636257f3 <unknown>\n#8 0x55de635f5ec9 <unknown>\n#9 0x55de635f691e <unknown>\n#10 0x55de638a99eb <unknown>\n#11 0x55de638ad972 <unknown>\n#12 0x55de63896e15 <unknown>\n#13 0x55de638ae502 <unknown>\n#14 0x55de6387bd2f <unknown>\n#15 0x55de638d2578 <unknown>\n#16 0x55de638d2750 <unknown>\n#17 0x55de638e248c <unknown>\n#18 0x7f4b7f7c5a94 <unknown>\n#19 0x7f4b7f852a34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"3c26d7c8acfa455e","name":"stdout","source":"3c26d7c8acfa455e.txt","type":"text/plain","size":653}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1984-724"},{"name":"thread","value":"2680-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GatesheadCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"8ee5799b9ddec243","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.12/2//#testresult/8ee5799b9ddec243","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5652c115d6ba <unknown>\n#1 0x5652c0e2d730 <unknown>\n#2 0x5652c0e7cd9b <unknown>\n#3 0x5652c0e7d081 <unknown>\n#4 0x5652c0ec0cd4 <unknown>\n#5 0x5652c0e9fa7d <unknown>\n#6 0x5652c0ebe1ca <unknown>\n#7 0x5652c0e9f7f3 <unknown>\n#8 0x5652c0e6fec9 <unknown>\n#9 0x5652c0e7091e <unknown>\n#10 0x5652c11239eb <unknown>\n#11 0x5652c1127972 <unknown>\n#12 0x5652c1110e15 <unknown>\n#13 0x5652c1128502 <unknown>\n#14 0x5652c10f5d2f <unknown>\n#15 0x5652c114c578 <unknown>\n#16 0x5652c114c750 <unknown>\n#17 0x5652c115c48c <unknown>\n#18 0x7ff23a98ca94 <unknown>\n#19 0x7ff23aa19a34 __clone","time":{"start":1722986425007,"stop":1722986493145,"duration":68138}},{"uid":"cb2c1caebc98936e","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.12/1//#testresult/cb2c1caebc98936e","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d4e81d26ba <unknown>\n#1 0x55d4e7ea2730 <unknown>\n#2 0x55d4e7ef1d9b <unknown>\n#3 0x55d4e7ef2081 <unknown>\n#4 0x55d4e7f35cd4 <unknown>\n#5 0x55d4e7f14a7d <unknown>\n#6 0x55d4e7f331ca <unknown>\n#7 0x55d4e7f147f3 <unknown>\n#8 0x55d4e7ee4ec9 <unknown>\n#9 0x55d4e7ee591e <unknown>\n#10 0x55d4e81989eb <unknown>\n#11 0x55d4e819c972 <unknown>\n#12 0x55d4e8185e15 <unknown>\n#13 0x55d4e819d502 <unknown>\n#14 0x55d4e816ad2f <unknown>\n#15 0x55d4e81c1578 <unknown>\n#16 0x55d4e81c1750 <unknown>\n#17 0x55d4e81d148c <unknown>\n#18 0x7f399ce33a94 <unknown>\n#19 0x7f399cec0a34 __clone","time":{"start":1722956557173,"stop":1722956615334,"duration":58161}}]},"tags":[]},"source":"3a7cae380ccefb27.json","parameterValues":["GatesheadCouncil"]}