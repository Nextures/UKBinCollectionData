{"uid":"5344bb30e3a3ded3","name":"Validate Council Output [CalderdaleCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"1b9aa52f7d9bfc9f284315c06170da9f","time":{"start":1722997924444,"stop":1722998006670,"duration":82226},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x556c005536ba <unknown>\n#1 0x556c00223730 <unknown>\n#2 0x556c00272d9b <unknown>\n#3 0x556c00273081 <unknown>\n#4 0x556c002b6cd4 <unknown>\n#5 0x556c00295a7d <unknown>\n#6 0x556c002b41ca <unknown>\n#7 0x556c002957f3 <unknown>\n#8 0x556c00265ec9 <unknown>\n#9 0x556c0026691e <unknown>\n#10 0x556c005199eb <unknown>\n#11 0x556c0051d972 <unknown>\n#12 0x556c00506e15 <unknown>\n#13 0x556c0051e502 <unknown>\n#14 0x556c004ebd2f <unknown>\n#15 0x556c00542578 <unknown>\n#16 0x556c00542750 <unknown>\n#17 0x556c0055248c <unknown>\n#18 0x7f5ad1554a94 <unknown>\n#19 0x7f5ad15e1a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f527d1c2700>\nrequest = <FixtureRequest for <Function test_scenario_outline[CalderdaleCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f527e8d6d50>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/CalderdaleCouncil.py:69: in parse_data\n    results = wait.until(EC.presence_of_element_located((By.ID, \"collection\")))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"32f783a0d2ecd6f85319277aeec38d09\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f527d1eb060>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x556c005536ba <unknown>\nE       #1 0x556c00223730 <unknown>\nE       #2 0x556c00272d9b <unknown>\nE       #3 0x556c00273081 <unknown>\nE       #4 0x556c002b6cd4 <unknown>\nE       #5 0x556c00295a7d <unknown>\nE       #6 0x556c002b41ca <unknown>\nE       #7 0x556c002957f3 <unknown>\nE       #8 0x556c00265ec9 <unknown>\nE       #9 0x556c0026691e <unknown>\nE       #10 0x556c005199eb <unknown>\nE       #11 0x556c0051d972 <unknown>\nE       #12 0x556c00506e15 <unknown>\nE       #13 0x556c0051e502 <unknown>\nE       #14 0x556c004ebd2f <unknown>\nE       #15 0x556c00542578 <unknown>\nE       #16 0x556c00542750 <unknown>\nE       #17 0x556c0055248c <unknown>\nE       #18 0x7f5ad1554a94 <unknown>\nE       #19 0x7f5ad15e1a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x556c005536ba <unknown>\n#1 0x556c00223730 <unknown>\n#2 0x556c00272d9b <unknown>\n#3 0x556c00273081 <unknown>\n#4 0x556c002b6cd4 <unknown>\n#5 0x556c00295a7d <unknown>\n#6 0x556c002b41ca <unknown>\n#7 0x556c002957f3 <unknown>\n#8 0x556c00265ec9 <unknown>\n#9 0x556c0026691e <unknown>\n#10 0x556c005199eb <unknown>\n#11 0x556c0051d972 <unknown>\n#12 0x556c00506e15 <unknown>\n#13 0x556c0051e502 <unknown>\n#14 0x556c004ebd2f <unknown>\n#15 0x556c00542578 <unknown>\n#16 0x556c00542750 <unknown>\n#17 0x556c0055248c <unknown>\n#18 0x7f5ad1554a94 <unknown>\n#19 0x7f5ad15e1a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f527d1c2700>\nrequest = <FixtureRequest for <Function test_scenario_outline[CalderdaleCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f527e8d6d50>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/CalderdaleCouncil.py:69: in parse_data\n    results = wait.until(EC.presence_of_element_located((By.ID, \"collection\")))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"32f783a0d2ecd6f85319277aeec38d09\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f527d1eb060>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x556c005536ba <unknown>\nE       #1 0x556c00223730 <unknown>\nE       #2 0x556c00272d9b <unknown>\nE       #3 0x556c00273081 <unknown>\nE       #4 0x556c002b6cd4 <unknown>\nE       #5 0x556c00295a7d <unknown>\nE       #6 0x556c002b41ca <unknown>\nE       #7 0x556c002957f3 <unknown>\nE       #8 0x556c00265ec9 <unknown>\nE       #9 0x556c0026691e <unknown>\nE       #10 0x556c005199eb <unknown>\nE       #11 0x556c0051d972 <unknown>\nE       #12 0x556c00506e15 <unknown>\nE       #13 0x556c0051e502 <unknown>\nE       #14 0x556c004ebd2f <unknown>\nE       #15 0x556c00542578 <unknown>\nE       #16 0x556c00542750 <unknown>\nE       #17 0x556c0055248c <unknown>\nE       #18 0x7f5ad1554a94 <unknown>\nE       #19 0x7f5ad15e1a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","steps":[{"name":"Given the council","time":{"start":1722997924444,"stop":1722997924445,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1722997924445,"stop":1722998006670,"duration":82225},"status":"failed","statusMessage":"Message: \nStacktrace:\n#0 0x556c005536ba <unknown>\n#1 0x556c00223730 <unknown>\n#2 0x556c00272d9b <unknown>\n#3 0x556c00273081 <unknown>\n#4 0x556c002b6cd4 <unknown>\n#5 0x556c00295a7d <unknown>\n#6 0x556c002b41ca <unknown>\n#7 0x556c002957f3 <unknown>\n#8 0x556c00265ec9 <unknown>\n#9 0x556c0026691e <unknown>\n#10 0x556c005199eb <unknown>\n#11 0x556c0051d972 <unknown>\n#12 0x556c00506e15 <unknown>\n#13 0x556c0051e502 <unknown>\n#14 0x556c004ebd2f <unknown>\n#15 0x556c00542578 <unknown>\n#16 0x556c00542750 <unknown>\n#17 0x556c0055248c <unknown>\n#18 0x7f5ad1554a94 <unknown>\n#19 0x7f5ad15e1a34 __clone\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x556c005536ba <unknown>\n#1 0x556c00223730 <unknown>\n#2 0x556c00272d9b <unknown>\n#3 0x556c00273081 <unknown>\n#4 0x556c002b6cd4 <unknown>\n#5 0x556c00295a7d <unknown>\n#6 0x556c002b41ca <unknown>\n#7 0x556c002957f3 <unknown>\n#8 0x556c00265ec9 <unknown>\n#9 0x556c0026691e <unknown>\n#10 0x556c005199eb <unknown>\n#11 0x556c0051d972 <unknown>\n#12 0x556c00506e15 <unknown>\n#13 0x556c0051e502 <unknown>\n#14 0x556c004ebd2f <unknown>\n#15 0x556c00542578 <unknown>\n#16 0x556c00542750 <unknown>\n#17 0x556c0055248c <unknown>\n#18 0x7f5ad1554a94 <unknown>\n#19 0x7f5ad15e1a34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"6c4b2e535728f2e0","name":"stdout","source":"6c4b2e535728f2e0.txt","type":"text/plain","size":654}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1771-943"},{"name":"thread","value":"2687-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CalderdaleCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"d94a5d4f44ef3e4c","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.12/3//#testresult/d94a5d4f44ef3e4c","status":"passed","time":{"start":1722988059650,"stop":1722988110820,"duration":51170}},{"uid":"b664a70a27c9085e","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.12/2//#testresult/b664a70a27c9085e","status":"passed","time":{"start":1722985550435,"stop":1722985602641,"duration":52206}},{"uid":"14005a9cc73e26c6","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.12/1//#testresult/14005a9cc73e26c6","status":"passed","time":{"start":1722955874864,"stop":1722955933331,"duration":58467}}]},"tags":[]},"source":"5344bb30e3a3ded3.json","parameterValues":["CalderdaleCouncil"]}