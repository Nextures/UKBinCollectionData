{"uid":"ac665f91954895d1","name":"Validate Council Output [WalthamForest]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f804494c5f4de0ecd7ce05105f7ab6a0","time":{"start":1722999245878,"stop":1722999301623,"duration":55745},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55aa32b896ba <unknown>\n#1 0x55aa32859730 <unknown>\n#2 0x55aa328a8d9b <unknown>\n#3 0x55aa328a9081 <unknown>\n#4 0x55aa328eccd4 <unknown>\n#5 0x55aa328cba7d <unknown>\n#6 0x55aa328ea1ca <unknown>\n#7 0x55aa328cb7f3 <unknown>\n#8 0x55aa3289bec9 <unknown>\n#9 0x55aa3289c91e <unknown>\n#10 0x55aa32b4f9eb <unknown>\n#11 0x55aa32b53972 <unknown>\n#12 0x55aa32b3ce15 <unknown>\n#13 0x55aa32b54502 <unknown>\n#14 0x55aa32b21d2f <unknown>\n#15 0x55aa32b78578 <unknown>\n#16 0x55aa32b78750 <unknown>\n#17 0x55aa32b8848c <unknown>\n#18 0x7f1f39a28a94 <unknown>\n#19 0x7f1f39ab5a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7fb181d27740>\nrequest = <FixtureRequest for <Function test_scenario_outline[WalthamForest]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb181bad750>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/WalthamForest.py:37: in parse_data\n    iframe_presense = WebDriverWait(driver, 30).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"37330c0bdcb5aa660d15aaa657fce99c\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7fb180c09620>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55aa32b896ba <unknown>\nE       #1 0x55aa32859730 <unknown>\nE       #2 0x55aa328a8d9b <unknown>\nE       #3 0x55aa328a9081 <unknown>\nE       #4 0x55aa328eccd4 <unknown>\nE       #5 0x55aa328cba7d <unknown>\nE       #6 0x55aa328ea1ca <unknown>\nE       #7 0x55aa328cb7f3 <unknown>\nE       #8 0x55aa3289bec9 <unknown>\nE       #9 0x55aa3289c91e <unknown>\nE       #10 0x55aa32b4f9eb <unknown>\nE       #11 0x55aa32b53972 <unknown>\nE       #12 0x55aa32b3ce15 <unknown>\nE       #13 0x55aa32b54502 <unknown>\nE       #14 0x55aa32b21d2f <unknown>\nE       #15 0x55aa32b78578 <unknown>\nE       #16 0x55aa32b78750 <unknown>\nE       #17 0x55aa32b8848c <unknown>\nE       #18 0x7f1f39a28a94 <unknown>\nE       #19 0x7f1f39ab5a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55aa32b896ba <unknown>\n#1 0x55aa32859730 <unknown>\n#2 0x55aa328a8d9b <unknown>\n#3 0x55aa328a9081 <unknown>\n#4 0x55aa328eccd4 <unknown>\n#5 0x55aa328cba7d <unknown>\n#6 0x55aa328ea1ca <unknown>\n#7 0x55aa328cb7f3 <unknown>\n#8 0x55aa3289bec9 <unknown>\n#9 0x55aa3289c91e <unknown>\n#10 0x55aa32b4f9eb <unknown>\n#11 0x55aa32b53972 <unknown>\n#12 0x55aa32b3ce15 <unknown>\n#13 0x55aa32b54502 <unknown>\n#14 0x55aa32b21d2f <unknown>\n#15 0x55aa32b78578 <unknown>\n#16 0x55aa32b78750 <unknown>\n#17 0x55aa32b8848c <unknown>\n#18 0x7f1f39a28a94 <unknown>\n#19 0x7f1f39ab5a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7fb181d27740>\nrequest = <FixtureRequest for <Function test_scenario_outline[WalthamForest]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb181bad750>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/WalthamForest.py:37: in parse_data\n    iframe_presense = WebDriverWait(driver, 30).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"37330c0bdcb5aa660d15aaa657fce99c\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7fb180c09620>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55aa32b896ba <unknown>\nE       #1 0x55aa32859730 <unknown>\nE       #2 0x55aa328a8d9b <unknown>\nE       #3 0x55aa328a9081 <unknown>\nE       #4 0x55aa328eccd4 <unknown>\nE       #5 0x55aa328cba7d <unknown>\nE       #6 0x55aa328ea1ca <unknown>\nE       #7 0x55aa328cb7f3 <unknown>\nE       #8 0x55aa3289bec9 <unknown>\nE       #9 0x55aa3289c91e <unknown>\nE       #10 0x55aa32b4f9eb <unknown>\nE       #11 0x55aa32b53972 <unknown>\nE       #12 0x55aa32b3ce15 <unknown>\nE       #13 0x55aa32b54502 <unknown>\nE       #14 0x55aa32b21d2f <unknown>\nE       #15 0x55aa32b78578 <unknown>\nE       #16 0x55aa32b78750 <unknown>\nE       #17 0x55aa32b8848c <unknown>\nE       #18 0x7f1f39a28a94 <unknown>\nE       #19 0x7f1f39ab5a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","steps":[{"name":"Given the council","time":{"start":1722999245879,"stop":1722999245879,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"When we scrape the data from the council","time":{"start":1722999245879,"stop":1722999301623,"duration":55744},"status":"failed","statusMessage":"Message: \nStacktrace:\n#0 0x55aa32b896ba <unknown>\n#1 0x55aa32859730 <unknown>\n#2 0x55aa328a8d9b <unknown>\n#3 0x55aa328a9081 <unknown>\n#4 0x55aa328eccd4 <unknown>\n#5 0x55aa328cba7d <unknown>\n#6 0x55aa328ea1ca <unknown>\n#7 0x55aa328cb7f3 <unknown>\n#8 0x55aa3289bec9 <unknown>\n#9 0x55aa3289c91e <unknown>\n#10 0x55aa32b4f9eb <unknown>\n#11 0x55aa32b53972 <unknown>\n#12 0x55aa32b3ce15 <unknown>\n#13 0x55aa32b54502 <unknown>\n#14 0x55aa32b21d2f <unknown>\n#15 0x55aa32b78578 <unknown>\n#16 0x55aa32b78750 <unknown>\n#17 0x55aa32b8848c <unknown>\n#18 0x7f1f39a28a94 <unknown>\n#19 0x7f1f39ab5a34 __clone\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55aa32b896ba <unknown>\n#1 0x55aa32859730 <unknown>\n#2 0x55aa328a8d9b <unknown>\n#3 0x55aa328a9081 <unknown>\n#4 0x55aa328eccd4 <unknown>\n#5 0x55aa328cba7d <unknown>\n#6 0x55aa328ea1ca <unknown>\n#7 0x55aa328cb7f3 <unknown>\n#8 0x55aa3289bec9 <unknown>\n#9 0x55aa3289c91e <unknown>\n#10 0x55aa32b4f9eb <unknown>\n#11 0x55aa32b53972 <unknown>\n#12 0x55aa32b3ce15 <unknown>\n#13 0x55aa32b54502 <unknown>\n#14 0x55aa32b21d2f <unknown>\n#15 0x55aa32b78578 <unknown>\n#16 0x55aa32b78750 <unknown>\n#17 0x55aa32b8848c <unknown>\n#18 0x7f1f39a28a94 <unknown>\n#19 0x7f1f39ab5a34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[{"uid":"c65f32afdf5f4cf9","name":"stdout","source":"c65f32afdf5f4cf9.txt","type":"text/plain","size":650}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"host","value":"fv-az1771-943"},{"name":"thread","value":"2693-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WalthamForest"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":4},"items":[{"uid":"688c38ca63c6f1b4","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.11/3//#testresult/688c38ca63c6f1b4","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5574823b36ba <unknown>\n#1 0x557482083730 <unknown>\n#2 0x5574820d2d9b <unknown>\n#3 0x5574820d3081 <unknown>\n#4 0x557482116cd4 <unknown>\n#5 0x5574820f5a7d <unknown>\n#6 0x5574821141ca <unknown>\n#7 0x5574820f57f3 <unknown>\n#8 0x5574820c5ec9 <unknown>\n#9 0x5574820c691e <unknown>\n#10 0x5574823799eb <unknown>\n#11 0x55748237d972 <unknown>\n#12 0x557482366e15 <unknown>\n#13 0x55748237e502 <unknown>\n#14 0x55748234bd2f <unknown>\n#15 0x5574823a2578 <unknown>\n#16 0x5574823a2750 <unknown>\n#17 0x5574823b248c <unknown>\n#18 0x7f8af19eca94 <unknown>\n#19 0x7f8af1a79a34 __clone","time":{"start":1722989440288,"stop":1722989489662,"duration":49374}},{"uid":"e21cae51eb2ea431","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.11/2//#testresult/e21cae51eb2ea431","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x56437a4d86ba <unknown>\n#1 0x56437a1a8730 <unknown>\n#2 0x56437a1f7d9b <unknown>\n#3 0x56437a1f8081 <unknown>\n#4 0x56437a23bcd4 <unknown>\n#5 0x56437a21aa7d <unknown>\n#6 0x56437a2391ca <unknown>\n#7 0x56437a21a7f3 <unknown>\n#8 0x56437a1eaec9 <unknown>\n#9 0x56437a1eb91e <unknown>\n#10 0x56437a49e9eb <unknown>\n#11 0x56437a4a2972 <unknown>\n#12 0x56437a48be15 <unknown>\n#13 0x56437a4a3502 <unknown>\n#14 0x56437a470d2f <unknown>\n#15 0x56437a4c7578 <unknown>\n#16 0x56437a4c7750 <unknown>\n#17 0x56437a4d748c <unknown>\n#18 0x7feffe7d6a94 <unknown>\n#19 0x7feffe863a34 __clone","time":{"start":1722986833813,"stop":1722986881921,"duration":48108}},{"uid":"bea67316f06b86b5","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.11/1//#testresult/bea67316f06b86b5","status":"passed","time":{"start":1722957184375,"stop":1722957221926,"duration":37551}}]},"tags":[]},"source":"ac665f91954895d1.json","parameterValues":["WalthamForest"]}