{"uid":"52867f1a63f34fda","name":"Validate Council Output [PrestonCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"adada69a336066ec844ff916b7714101","time":{"start":1722998881217,"stop":1722999037099,"duration":155882},"status":"failed","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x55701a0bc6ba <unknown>\n#1 0x557019d8c730 <unknown>\n#2 0x557019d84761 <unknown>\n#3 0x557019d748f9 <unknown>\n#4 0x557019d76684 <unknown>\n#5 0x557019d74bc5 <unknown>\n#6 0x557019d74426 <unknown>\n#7 0x557019d7431e <unknown>\n#8 0x557019d7264c <unknown>\n#9 0x557019d729ca <unknown>\n#10 0x557019d8f051 <unknown>\n#11 0x557019e1dcc5 <unknown>\n#12 0x557019dfea52 <unknown>\n#13 0x557019e1d1ca <unknown>\n#14 0x557019dfe7f3 <unknown>\n#15 0x557019dceec9 <unknown>\n#16 0x557019dcf91e <unknown>\n#17 0x55701a0829eb <unknown>\n#18 0x55701a086972 <unknown>\n#19 0x55701a06fe15 <unknown>\n#20 0x55701a087502 <unknown>\n#21 0x55701a054d2f <unknown>\n#22 0x55701a0ab578 <unknown>\n#23 0x55701a0ab750 <unknown>\n#24 0x55701a0bb48c <unknown>\n#25 0x7f1ee7aa8a94 <unknown>\n#26 0x7f1ee7b35a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7fb181d27740>\nrequest = <FixtureRequest for <Function test_scenario_outline[PrestonCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb181bad750>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/PrestonCityCouncil.py:39: in parse_data\n    driver.get(page)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:363: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb180c4a850>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...unknown>\\\\n#24 0x55701a0bb48c \\\\u003Cunknown>\\\\n#25 0x7f1ee7aa8a94 \\\\u003Cunknown>\\\\n#26 0x7f1ee7b35a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: chrome-headless-shell=127.0.6533.72)\nE       Stacktrace:\nE       #0 0x55701a0bc6ba <unknown>\nE       #1 0x557019d8c730 <unknown>\nE       #2 0x557019d84761 <unknown>\nE       #3 0x557019d748f9 <unknown>\nE       #4 0x557019d76684 <unknown>\nE       #5 0x557019d74bc5 <unknown>\nE       #6 0x557019d74426 <unknown>\nE       #7 0x557019d7431e <unknown>\nE       #8 0x557019d7264c <unknown>\nE       #9 0x557019d729ca <unknown>\nE       #10 0x557019d8f051 <unknown>\nE       #11 0x557019e1dcc5 <unknown>\nE       #12 0x557019dfea52 <unknown>\nE       #13 0x557019e1d1ca <unknown>\nE       #14 0x557019dfe7f3 <unknown>\nE       #15 0x557019dceec9 <unknown>\nE       #16 0x557019dcf91e <unknown>\nE       #17 0x55701a0829eb <unknown>\nE       #18 0x55701a086972 <unknown>\nE       #19 0x55701a06fe15 <unknown>\nE       #20 0x55701a087502 <unknown>\nE       #21 0x55701a054d2f <unknown>\nE       #22 0x55701a0ab578 <unknown>\nE       #23 0x55701a0ab750 <unknown>\nE       #24 0x55701a0bb48c <unknown>\nE       #25 0x7f1ee7aa8a94 <unknown>\nE       #26 0x7f1ee7b35a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x55701a0bc6ba <unknown>\n#1 0x557019d8c730 <unknown>\n#2 0x557019d84761 <unknown>\n#3 0x557019d748f9 <unknown>\n#4 0x557019d76684 <unknown>\n#5 0x557019d74bc5 <unknown>\n#6 0x557019d74426 <unknown>\n#7 0x557019d7431e <unknown>\n#8 0x557019d7264c <unknown>\n#9 0x557019d729ca <unknown>\n#10 0x557019d8f051 <unknown>\n#11 0x557019e1dcc5 <unknown>\n#12 0x557019dfea52 <unknown>\n#13 0x557019e1d1ca <unknown>\n#14 0x557019dfe7f3 <unknown>\n#15 0x557019dceec9 <unknown>\n#16 0x557019dcf91e <unknown>\n#17 0x55701a0829eb <unknown>\n#18 0x55701a086972 <unknown>\n#19 0x55701a06fe15 <unknown>\n#20 0x55701a087502 <unknown>\n#21 0x55701a054d2f <unknown>\n#22 0x55701a0ab578 <unknown>\n#23 0x55701a0ab750 <unknown>\n#24 0x55701a0bb48c <unknown>\n#25 0x7f1ee7aa8a94 <unknown>\n#26 0x7f1ee7b35a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7fb181d27740>\nrequest = <FixtureRequest for <Function test_scenario_outline[PrestonCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb181bad750>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/PrestonCityCouncil.py:39: in parse_data\n    driver.get(page)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:363: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb180c4a850>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...unknown>\\\\n#24 0x55701a0bb48c \\\\u003Cunknown>\\\\n#25 0x7f1ee7aa8a94 \\\\u003Cunknown>\\\\n#26 0x7f1ee7b35a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: chrome-headless-shell=127.0.6533.72)\nE       Stacktrace:\nE       #0 0x55701a0bc6ba <unknown>\nE       #1 0x557019d8c730 <unknown>\nE       #2 0x557019d84761 <unknown>\nE       #3 0x557019d748f9 <unknown>\nE       #4 0x557019d76684 <unknown>\nE       #5 0x557019d74bc5 <unknown>\nE       #6 0x557019d74426 <unknown>\nE       #7 0x557019d7431e <unknown>\nE       #8 0x557019d7264c <unknown>\nE       #9 0x557019d729ca <unknown>\nE       #10 0x557019d8f051 <unknown>\nE       #11 0x557019e1dcc5 <unknown>\nE       #12 0x557019dfea52 <unknown>\nE       #13 0x557019e1d1ca <unknown>\nE       #14 0x557019dfe7f3 <unknown>\nE       #15 0x557019dceec9 <unknown>\nE       #16 0x557019dcf91e <unknown>\nE       #17 0x55701a0829eb <unknown>\nE       #18 0x55701a086972 <unknown>\nE       #19 0x55701a06fe15 <unknown>\nE       #20 0x55701a087502 <unknown>\nE       #21 0x55701a054d2f <unknown>\nE       #22 0x55701a0ab578 <unknown>\nE       #23 0x55701a0ab750 <unknown>\nE       #24 0x55701a0bb48c <unknown>\nE       #25 0x7f1ee7aa8a94 <unknown>\nE       #26 0x7f1ee7b35a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","steps":[{"name":"Given the council","time":{"start":1722998881217,"stop":1722998881217,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"When we scrape the data from the council","time":{"start":1722998881217,"stop":1722999037099,"duration":155882},"status":"failed","statusMessage":"Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x55701a0bc6ba <unknown>\n#1 0x557019d8c730 <unknown>\n#2 0x557019d84761 <unknown>\n#3 0x557019d748f9 <unknown>\n#4 0x557019d76684 <unknown>\n#5 0x557019d74bc5 <unknown>\n#6 0x557019d74426 <unknown>\n#7 0x557019d7431e <unknown>\n#8 0x557019d7264c <unknown>\n#9 0x557019d729ca <unknown>\n#10 0x557019d8f051 <unknown>\n#11 0x557019e1dcc5 <unknown>\n#12 0x557019dfea52 <unknown>\n#13 0x557019e1d1ca <unknown>\n#14 0x557019dfe7f3 <unknown>\n#15 0x557019dceec9 <unknown>\n#16 0x557019dcf91e <unknown>\n#17 0x55701a0829eb <unknown>\n#18 0x55701a086972 <unknown>\n#19 0x55701a06fe15 <unknown>\n#20 0x55701a087502 <unknown>\n#21 0x55701a054d2f <unknown>\n#22 0x55701a0ab578 <unknown>\n#23 0x55701a0ab750 <unknown>\n#24 0x55701a0bb48c <unknown>\n#25 0x7f1ee7aa8a94 <unknown>\n#26 0x7f1ee7b35a34 __clone\n","statusTrace":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x55701a0bc6ba <unknown>\n#1 0x557019d8c730 <unknown>\n#2 0x557019d84761 <unknown>\n#3 0x557019d748f9 <unknown>\n#4 0x557019d76684 <unknown>\n#5 0x557019d74bc5 <unknown>\n#6 0x557019d74426 <unknown>\n#7 0x557019d7431e <unknown>\n#8 0x557019d7264c <unknown>\n#9 0x557019d729ca <unknown>\n#10 0x557019d8f051 <unknown>\n#11 0x557019e1dcc5 <unknown>\n#12 0x557019dfea52 <unknown>\n#13 0x557019e1d1ca <unknown>\n#14 0x557019dfe7f3 <unknown>\n#15 0x557019dceec9 <unknown>\n#16 0x557019dcf91e <unknown>\n#17 0x55701a0829eb <unknown>\n#18 0x55701a086972 <unknown>\n#19 0x55701a06fe15 <unknown>\n#20 0x55701a087502 <unknown>\n#21 0x55701a054d2f <unknown>\n#22 0x55701a0ab578 <unknown>\n#23 0x55701a0ab750 <unknown>\n#24 0x55701a0bb48c <unknown>\n#25 0x7f1ee7aa8a94 <unknown>\n#26 0x7f1ee7b35a34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[{"uid":"58dd61b5be314cf3","name":"stdout","source":"58dd61b5be314cf3.txt","type":"text/plain","size":956}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"host","value":"fv-az1771-943"},{"name":"thread","value":"2693-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"PrestonCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"b17d7f6b47468699","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.11/3//#testresult/b17d7f6b47468699","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x5563b117f6ba <unknown>\n#1 0x5563b0e4f730 <unknown>\n#2 0x5563b0e47761 <unknown>\n#3 0x5563b0e378f9 <unknown>\n#4 0x5563b0e39684 <unknown>\n#5 0x5563b0e37bc5 <unknown>\n#6 0x5563b0e37426 <unknown>\n#7 0x5563b0e3731e <unknown>\n#8 0x5563b0e3564c <unknown>\n#9 0x5563b0e359ca <unknown>\n#10 0x5563b0e52051 <unknown>\n#11 0x5563b0ee0cc5 <unknown>\n#12 0x5563b0ec1a52 <unknown>\n#13 0x5563b0ee01ca <unknown>\n#14 0x5563b0ec17f3 <unknown>\n#15 0x5563b0e91ec9 <unknown>\n#16 0x5563b0e9291e <unknown>\n#17 0x5563b11459eb <unknown>\n#18 0x5563b1149972 <unknown>\n#19 0x5563b1132e15 <unknown>\n#20 0x5563b114a502 <unknown>\n#21 0x5563b1117d2f <unknown>\n#22 0x5563b116e578 <unknown>\n#23 0x5563b116e750 <unknown>\n#24 0x5563b117e48c <unknown>\n#25 0x7f1c90663a94 <unknown>\n#26 0x7f1c906f0a34 __clone","time":{"start":1722989069978,"stop":1722989213456,"duration":143478}},{"uid":"b5dc48e4c3847caa","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.11/2//#testresult/b5dc48e4c3847caa","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x5580efa666ba <unknown>\n#1 0x5580ef736730 <unknown>\n#2 0x5580ef72e761 <unknown>\n#3 0x5580ef71e8f9 <unknown>\n#4 0x5580ef720684 <unknown>\n#5 0x5580ef71ebc5 <unknown>\n#6 0x5580ef71e426 <unknown>\n#7 0x5580ef71e31e <unknown>\n#8 0x5580ef71c64c <unknown>\n#9 0x5580ef71c9ca <unknown>\n#10 0x5580ef739051 <unknown>\n#11 0x5580ef7c7cc5 <unknown>\n#12 0x5580ef7a8a52 <unknown>\n#13 0x5580ef7c71ca <unknown>\n#14 0x5580ef7a87f3 <unknown>\n#15 0x5580ef778ec9 <unknown>\n#16 0x5580ef77991e <unknown>\n#17 0x5580efa2c9eb <unknown>\n#18 0x5580efa30972 <unknown>\n#19 0x5580efa19e15 <unknown>\n#20 0x5580efa31502 <unknown>\n#21 0x5580ef9fed2f <unknown>\n#22 0x5580efa55578 <unknown>\n#23 0x5580efa55750 <unknown>\n#24 0x5580efa6548c <unknown>\n#25 0x7fc4dd905a94 <unknown>\n#26 0x7fc4dd992a34 __clone","time":{"start":1722986468873,"stop":1722986606404,"duration":137531}},{"uid":"7797e5df6bc3c25","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.11/1//#testresult/7797e5df6bc3c25","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x558419ef76ba <unknown>\n#1 0x558419bc7730 <unknown>\n#2 0x558419bbf761 <unknown>\n#3 0x558419baf8f9 <unknown>\n#4 0x558419bb1684 <unknown>\n#5 0x558419bafbc5 <unknown>\n#6 0x558419baf426 <unknown>\n#7 0x558419baf31e <unknown>\n#8 0x558419bad64c <unknown>\n#9 0x558419bad9ca <unknown>\n#10 0x558419bca051 <unknown>\n#11 0x558419c58cc5 <unknown>\n#12 0x558419c39a52 <unknown>\n#13 0x558419c581ca <unknown>\n#14 0x558419c397f3 <unknown>\n#15 0x558419c09ec9 <unknown>\n#16 0x558419c0a91e <unknown>\n#17 0x558419ebd9eb <unknown>\n#18 0x558419ec1972 <unknown>\n#19 0x558419eaae15 <unknown>\n#20 0x558419ec2502 <unknown>\n#21 0x558419e8fd2f <unknown>\n#22 0x558419ee6578 <unknown>\n#23 0x558419ee6750 <unknown>\n#24 0x558419ef648c <unknown>\n#25 0x7f748967fa94 <unknown>\n#26 0x7f748970ca34 __clone","time":{"start":1722956822875,"stop":1722956961093,"duration":138218}}]},"tags":[]},"source":"52867f1a63f34fda.json","parameterValues":["PrestonCityCouncil"]}