{"uid":"c5c51ac08b0af8f","name":"Validate Council Output [KnowsleyMBCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"56740e3e170c4ada5e89fee4a4334687","time":{"start":1722998654823,"stop":1722998739224,"duration":84401},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d17816e6ba <unknown>\n#1 0x55d177e3e730 <unknown>\n#2 0x55d177e8dd9b <unknown>\n#3 0x55d177e8e081 <unknown>\n#4 0x55d177ed1cd4 <unknown>\n#5 0x55d177eb0a7d <unknown>\n#6 0x55d177ecf1ca <unknown>\n#7 0x55d177eb07f3 <unknown>\n#8 0x55d177e80ec9 <unknown>\n#9 0x55d177e8191e <unknown>\n#10 0x55d1781349eb <unknown>\n#11 0x55d178138972 <unknown>\n#12 0x55d178121e15 <unknown>\n#13 0x55d178139502 <unknown>\n#14 0x55d178106d2f <unknown>\n#15 0x55d17815d578 <unknown>\n#16 0x55d17815d750 <unknown>\n#17 0x55d17816d48c <unknown>\n#18 0x7f244b122a94 <unknown>\n#19 0x7f244b1afa34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f1ba0bf8f40>\nrequest = <FixtureRequest for <Function test_scenario_outline[KnowsleyMBCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f1ba0a76350>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/KnowsleyMBCouncil.py:40: in parse_data\n    inputElement_postcode = WebDriverWait(driver, 30).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"decc78c326fff8d25d7cb515c9c67ec8\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f1ba0074a40>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55d17816e6ba <unknown>\nE       #1 0x55d177e3e730 <unknown>\nE       #2 0x55d177e8dd9b <unknown>\nE       #3 0x55d177e8e081 <unknown>\nE       #4 0x55d177ed1cd4 <unknown>\nE       #5 0x55d177eb0a7d <unknown>\nE       #6 0x55d177ecf1ca <unknown>\nE       #7 0x55d177eb07f3 <unknown>\nE       #8 0x55d177e80ec9 <unknown>\nE       #9 0x55d177e8191e <unknown>\nE       #10 0x55d1781349eb <unknown>\nE       #11 0x55d178138972 <unknown>\nE       #12 0x55d178121e15 <unknown>\nE       #13 0x55d178139502 <unknown>\nE       #14 0x55d178106d2f <unknown>\nE       #15 0x55d17815d578 <unknown>\nE       #16 0x55d17815d750 <unknown>\nE       #17 0x55d17816d48c <unknown>\nE       #18 0x7f244b122a94 <unknown>\nE       #19 0x7f244b1afa34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d17816e6ba <unknown>\n#1 0x55d177e3e730 <unknown>\n#2 0x55d177e8dd9b <unknown>\n#3 0x55d177e8e081 <unknown>\n#4 0x55d177ed1cd4 <unknown>\n#5 0x55d177eb0a7d <unknown>\n#6 0x55d177ecf1ca <unknown>\n#7 0x55d177eb07f3 <unknown>\n#8 0x55d177e80ec9 <unknown>\n#9 0x55d177e8191e <unknown>\n#10 0x55d1781349eb <unknown>\n#11 0x55d178138972 <unknown>\n#12 0x55d178121e15 <unknown>\n#13 0x55d178139502 <unknown>\n#14 0x55d178106d2f <unknown>\n#15 0x55d17815d578 <unknown>\n#16 0x55d17815d750 <unknown>\n#17 0x55d17816d48c <unknown>\n#18 0x7f244b122a94 <unknown>\n#19 0x7f244b1afa34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f1ba0bf8f40>\nrequest = <FixtureRequest for <Function test_scenario_outline[KnowsleyMBCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f1ba0a76350>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/KnowsleyMBCouncil.py:40: in parse_data\n    inputElement_postcode = WebDriverWait(driver, 30).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"decc78c326fff8d25d7cb515c9c67ec8\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f1ba0074a40>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55d17816e6ba <unknown>\nE       #1 0x55d177e3e730 <unknown>\nE       #2 0x55d177e8dd9b <unknown>\nE       #3 0x55d177e8e081 <unknown>\nE       #4 0x55d177ed1cd4 <unknown>\nE       #5 0x55d177eb0a7d <unknown>\nE       #6 0x55d177ecf1ca <unknown>\nE       #7 0x55d177eb07f3 <unknown>\nE       #8 0x55d177e80ec9 <unknown>\nE       #9 0x55d177e8191e <unknown>\nE       #10 0x55d1781349eb <unknown>\nE       #11 0x55d178138972 <unknown>\nE       #12 0x55d178121e15 <unknown>\nE       #13 0x55d178139502 <unknown>\nE       #14 0x55d178106d2f <unknown>\nE       #15 0x55d17815d578 <unknown>\nE       #16 0x55d17815d750 <unknown>\nE       #17 0x55d17816d48c <unknown>\nE       #18 0x7f244b122a94 <unknown>\nE       #19 0x7f244b1afa34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","steps":[{"name":"Given the council","time":{"start":1722998654824,"stop":1722998654824,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"When we scrape the data from the council","time":{"start":1722998654824,"stop":1722998739224,"duration":84400},"status":"failed","statusMessage":"Message: \nStacktrace:\n#0 0x55d17816e6ba <unknown>\n#1 0x55d177e3e730 <unknown>\n#2 0x55d177e8dd9b <unknown>\n#3 0x55d177e8e081 <unknown>\n#4 0x55d177ed1cd4 <unknown>\n#5 0x55d177eb0a7d <unknown>\n#6 0x55d177ecf1ca <unknown>\n#7 0x55d177eb07f3 <unknown>\n#8 0x55d177e80ec9 <unknown>\n#9 0x55d177e8191e <unknown>\n#10 0x55d1781349eb <unknown>\n#11 0x55d178138972 <unknown>\n#12 0x55d178121e15 <unknown>\n#13 0x55d178139502 <unknown>\n#14 0x55d178106d2f <unknown>\n#15 0x55d17815d578 <unknown>\n#16 0x55d17815d750 <unknown>\n#17 0x55d17816d48c <unknown>\n#18 0x7f244b122a94 <unknown>\n#19 0x7f244b1afa34 __clone\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d17816e6ba <unknown>\n#1 0x55d177e3e730 <unknown>\n#2 0x55d177e8dd9b <unknown>\n#3 0x55d177e8e081 <unknown>\n#4 0x55d177ed1cd4 <unknown>\n#5 0x55d177eb0a7d <unknown>\n#6 0x55d177ecf1ca <unknown>\n#7 0x55d177eb07f3 <unknown>\n#8 0x55d177e80ec9 <unknown>\n#9 0x55d177e8191e <unknown>\n#10 0x55d1781349eb <unknown>\n#11 0x55d178138972 <unknown>\n#12 0x55d178121e15 <unknown>\n#13 0x55d178139502 <unknown>\n#14 0x55d178106d2f <unknown>\n#15 0x55d17815d578 <unknown>\n#16 0x55d17815d750 <unknown>\n#17 0x55d17816d48c <unknown>\n#18 0x7f244b122a94 <unknown>\n#19 0x7f244b1afa34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[{"uid":"7eea937402f84d2f","name":"stdout","source":"7eea937402f84d2f.txt","type":"text/plain","size":654}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"host","value":"fv-az1771-943"},{"name":"thread","value":"2690-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"KnowsleyMBCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"194898135376a19b","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.11/3//#testresult/194898135376a19b","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x560b7c63e6ba <unknown>\n#1 0x560b7c30e730 <unknown>\n#2 0x560b7c35dd9b <unknown>\n#3 0x560b7c35e081 <unknown>\n#4 0x560b7c3a1cd4 <unknown>\n#5 0x560b7c380a7d <unknown>\n#6 0x560b7c39f1ca <unknown>\n#7 0x560b7c3807f3 <unknown>\n#8 0x560b7c350ec9 <unknown>\n#9 0x560b7c35191e <unknown>\n#10 0x560b7c6049eb <unknown>\n#11 0x560b7c608972 <unknown>\n#12 0x560b7c5f1e15 <unknown>\n#13 0x560b7c609502 <unknown>\n#14 0x560b7c5d6d2f <unknown>\n#15 0x560b7c62d578 <unknown>\n#16 0x560b7c62d750 <unknown>\n#17 0x560b7c63d48c <unknown>\n#18 0x7f9058ad4a94 <unknown>\n#19 0x7f9058b61a34 __clone","time":{"start":1722988782546,"stop":1722988885734,"duration":103188}},{"uid":"8d294c12f26df98b","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.11/2//#testresult/8d294c12f26df98b","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5564e86946ba <unknown>\n#1 0x5564e8364730 <unknown>\n#2 0x5564e83b3d9b <unknown>\n#3 0x5564e83b4081 <unknown>\n#4 0x5564e83f7cd4 <unknown>\n#5 0x5564e83d6a7d <unknown>\n#6 0x5564e83f51ca <unknown>\n#7 0x5564e83d67f3 <unknown>\n#8 0x5564e83a6ec9 <unknown>\n#9 0x5564e83a791e <unknown>\n#10 0x5564e865a9eb <unknown>\n#11 0x5564e865e972 <unknown>\n#12 0x5564e8647e15 <unknown>\n#13 0x5564e865f502 <unknown>\n#14 0x5564e862cd2f <unknown>\n#15 0x5564e8683578 <unknown>\n#16 0x5564e8683750 <unknown>\n#17 0x5564e869348c <unknown>\n#18 0x7f83a0784a94 <unknown>\n#19 0x7f83a0811a34 __clone","time":{"start":1722986307115,"stop":1722986385357,"duration":78242}},{"uid":"24097b14e5d37ba0","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.11/1//#testresult/24097b14e5d37ba0","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5594106da6ba <unknown>\n#1 0x5594103aa730 <unknown>\n#2 0x5594103f9d9b <unknown>\n#3 0x5594103fa081 <unknown>\n#4 0x55941043dcd4 <unknown>\n#5 0x55941041ca7d <unknown>\n#6 0x55941043b1ca <unknown>\n#7 0x55941041c7f3 <unknown>\n#8 0x5594103ecec9 <unknown>\n#9 0x5594103ed91e <unknown>\n#10 0x5594106a09eb <unknown>\n#11 0x5594106a4972 <unknown>\n#12 0x55941068de15 <unknown>\n#13 0x5594106a5502 <unknown>\n#14 0x559410672d2f <unknown>\n#15 0x5594106c9578 <unknown>\n#16 0x5594106c9750 <unknown>\n#17 0x5594106d948c <unknown>\n#18 0x7fd156fbda94 <unknown>\n#19 0x7fd15704aa34 __clone","time":{"start":1722956641225,"stop":1722956690369,"duration":49144}}]},"tags":[]},"source":"c5c51ac08b0af8f.json","parameterValues":["KnowsleyMBCouncil"]}