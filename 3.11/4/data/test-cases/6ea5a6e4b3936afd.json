{"uid":"6ea5a6e4b3936afd","name":"Validate Council Output [EastRidingCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f7ffd8878be96220bbaf283f6c48e546","time":{"start":1722998772797,"stop":1722998798086,"duration":25289},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"accordion closed meta-none  \" id=\"when-and-where-should-i-put-my-bin-out\" data-order-latest=\"2408070346\" data-order-atoz=\"whenandwhereshouldiputmybinout?\">...</div> is not clickable at point (392, 583). Other element would receive the click: <div class=\"toolbar-full-width\">...</div>\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x55bf94c156ba <unknown>\n#1 0x55bf948e5730 <unknown>\n#2 0x55bf9493ba96 <unknown>\n#3 0x55bf949399ad <unknown>\n#4 0x55bf94937447 <unknown>\n#5 0x55bf9493630e <unknown>\n#6 0x55bf94929d66 <unknown>\n#7 0x55bf94957a52 <unknown>\n#8 0x55bf94929719 <unknown>\n#9 0x55bf94957c1e <unknown>\n#10 0x55bf949761ca <unknown>\n#11 0x55bf949577f3 <unknown>\n#12 0x55bf94927ec9 <unknown>\n#13 0x55bf9492891e <unknown>\n#14 0x55bf94bdb9eb <unknown>\n#15 0x55bf94bdf972 <unknown>\n#16 0x55bf94bc8e15 <unknown>\n#17 0x55bf94be0502 <unknown>\n#18 0x55bf94badd2f <unknown>\n#19 0x55bf94c04578 <unknown>\n#20 0x55bf94c04750 <unknown>\n#21 0x55bf94c1448c <unknown>\n#22 0x7f14374aba94 <unknown>\n#23 0x7f1437538a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7fb181d27740>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastRidingCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb181bad750>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/EastRidingCouncil.py:59: in parse_data\n    expand_postcode_box.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb180c9a110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unknown>\\\\n#21 0x55bf94c1448c \\\\u003Cunknown>\\\\n#22 0x7f14374aba94 \\\\u003Cunknown>\\\\n#23 0x7f1437538a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"accordion closed meta-none  \" id=\"when-and-where-should-i-put-my-bin-out\" data-order-latest=\"2408070346\" data-order-atoz=\"whenandwhereshouldiputmybinout?\">...</div> is not clickable at point (392, 583). Other element would receive the click: <div class=\"toolbar-full-width\">...</div>\nE         (Session info: chrome-headless-shell=127.0.6533.72)\nE       Stacktrace:\nE       #0 0x55bf94c156ba <unknown>\nE       #1 0x55bf948e5730 <unknown>\nE       #2 0x55bf9493ba96 <unknown>\nE       #3 0x55bf949399ad <unknown>\nE       #4 0x55bf94937447 <unknown>\nE       #5 0x55bf9493630e <unknown>\nE       #6 0x55bf94929d66 <unknown>\nE       #7 0x55bf94957a52 <unknown>\nE       #8 0x55bf94929719 <unknown>\nE       #9 0x55bf94957c1e <unknown>\nE       #10 0x55bf949761ca <unknown>\nE       #11 0x55bf949577f3 <unknown>\nE       #12 0x55bf94927ec9 <unknown>\nE       #13 0x55bf9492891e <unknown>\nE       #14 0x55bf94bdb9eb <unknown>\nE       #15 0x55bf94bdf972 <unknown>\nE       #16 0x55bf94bc8e15 <unknown>\nE       #17 0x55bf94be0502 <unknown>\nE       #18 0x55bf94badd2f <unknown>\nE       #19 0x55bf94c04578 <unknown>\nE       #20 0x55bf94c04750 <unknown>\nE       #21 0x55bf94c1448c <unknown>\nE       #22 0x7f14374aba94 <unknown>\nE       #23 0x7f1437538a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"accordion closed meta-none  \" id=\"when-and-where-should-i-put-my-bin-out\" data-order-latest=\"2408070346\" data-order-atoz=\"whenandwhereshouldiputmybinout?\">...</div> is not clickable at point (392, 583). Other element would receive the click: <div class=\"toolbar-full-width\">...</div>\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x55bf94c156ba <unknown>\n#1 0x55bf948e5730 <unknown>\n#2 0x55bf9493ba96 <unknown>\n#3 0x55bf949399ad <unknown>\n#4 0x55bf94937447 <unknown>\n#5 0x55bf9493630e <unknown>\n#6 0x55bf94929d66 <unknown>\n#7 0x55bf94957a52 <unknown>\n#8 0x55bf94929719 <unknown>\n#9 0x55bf94957c1e <unknown>\n#10 0x55bf949761ca <unknown>\n#11 0x55bf949577f3 <unknown>\n#12 0x55bf94927ec9 <unknown>\n#13 0x55bf9492891e <unknown>\n#14 0x55bf94bdb9eb <unknown>\n#15 0x55bf94bdf972 <unknown>\n#16 0x55bf94bc8e15 <unknown>\n#17 0x55bf94be0502 <unknown>\n#18 0x55bf94badd2f <unknown>\n#19 0x55bf94c04578 <unknown>\n#20 0x55bf94c04750 <unknown>\n#21 0x55bf94c1448c <unknown>\n#22 0x7f14374aba94 <unknown>\n#23 0x7f1437538a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7fb181d27740>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastRidingCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb181bad750>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/EastRidingCouncil.py:59: in parse_data\n    expand_postcode_box.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb180c9a110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unknown>\\\\n#21 0x55bf94c1448c \\\\u003Cunknown>\\\\n#22 0x7f14374aba94 \\\\u003Cunknown>\\\\n#23 0x7f1437538a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"accordion closed meta-none  \" id=\"when-and-where-should-i-put-my-bin-out\" data-order-latest=\"2408070346\" data-order-atoz=\"whenandwhereshouldiputmybinout?\">...</div> is not clickable at point (392, 583). Other element would receive the click: <div class=\"toolbar-full-width\">...</div>\nE         (Session info: chrome-headless-shell=127.0.6533.72)\nE       Stacktrace:\nE       #0 0x55bf94c156ba <unknown>\nE       #1 0x55bf948e5730 <unknown>\nE       #2 0x55bf9493ba96 <unknown>\nE       #3 0x55bf949399ad <unknown>\nE       #4 0x55bf94937447 <unknown>\nE       #5 0x55bf9493630e <unknown>\nE       #6 0x55bf94929d66 <unknown>\nE       #7 0x55bf94957a52 <unknown>\nE       #8 0x55bf94929719 <unknown>\nE       #9 0x55bf94957c1e <unknown>\nE       #10 0x55bf949761ca <unknown>\nE       #11 0x55bf949577f3 <unknown>\nE       #12 0x55bf94927ec9 <unknown>\nE       #13 0x55bf9492891e <unknown>\nE       #14 0x55bf94bdb9eb <unknown>\nE       #15 0x55bf94bdf972 <unknown>\nE       #16 0x55bf94bc8e15 <unknown>\nE       #17 0x55bf94be0502 <unknown>\nE       #18 0x55bf94badd2f <unknown>\nE       #19 0x55bf94c04578 <unknown>\nE       #20 0x55bf94c04750 <unknown>\nE       #21 0x55bf94c1448c <unknown>\nE       #22 0x7f14374aba94 <unknown>\nE       #23 0x7f1437538a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council","time":{"start":1722998772798,"stop":1722998772798,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"When we scrape the data from the council","time":{"start":1722998772798,"stop":1722998798086,"duration":25288},"status":"failed","statusMessage":"Message: element click intercepted: Element <div class=\"accordion closed meta-none  \" id=\"when-and-where-should-i-put-my-bin-out\" data-order-latest=\"2408070346\" data-order-atoz=\"whenandwhereshouldiputmybinout?\">...</div> is not clickable at point (392, 583). Other element would receive the click: <div class=\"toolbar-full-width\">...</div>\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x55bf94c156ba <unknown>\n#1 0x55bf948e5730 <unknown>\n#2 0x55bf9493ba96 <unknown>\n#3 0x55bf949399ad <unknown>\n#4 0x55bf94937447 <unknown>\n#5 0x55bf9493630e <unknown>\n#6 0x55bf94929d66 <unknown>\n#7 0x55bf94957a52 <unknown>\n#8 0x55bf94929719 <unknown>\n#9 0x55bf94957c1e <unknown>\n#10 0x55bf949761ca <unknown>\n#11 0x55bf949577f3 <unknown>\n#12 0x55bf94927ec9 <unknown>\n#13 0x55bf9492891e <unknown>\n#14 0x55bf94bdb9eb <unknown>\n#15 0x55bf94bdf972 <unknown>\n#16 0x55bf94bc8e15 <unknown>\n#17 0x55bf94be0502 <unknown>\n#18 0x55bf94badd2f <unknown>\n#19 0x55bf94c04578 <unknown>\n#20 0x55bf94c04750 <unknown>\n#21 0x55bf94c1448c <unknown>\n#22 0x7f14374aba94 <unknown>\n#23 0x7f1437538a34 __clone\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"accordion closed meta-none  \" id=\"when-and-where-should-i-put-my-bin-out\" data-order-latest=\"2408070346\" data-order-atoz=\"whenandwhereshouldiputmybinout?\">...</div> is not clickable at point (392, 583). Other element would receive the click: <div class=\"toolbar-full-width\">...</div>\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x55bf94c156ba <unknown>\n#1 0x55bf948e5730 <unknown>\n#2 0x55bf9493ba96 <unknown>\n#3 0x55bf949399ad <unknown>\n#4 0x55bf94937447 <unknown>\n#5 0x55bf9493630e <unknown>\n#6 0x55bf94929d66 <unknown>\n#7 0x55bf94957a52 <unknown>\n#8 0x55bf94929719 <unknown>\n#9 0x55bf94957c1e <unknown>\n#10 0x55bf949761ca <unknown>\n#11 0x55bf949577f3 <unknown>\n#12 0x55bf94927ec9 <unknown>\n#13 0x55bf9492891e <unknown>\n#14 0x55bf94bdb9eb <unknown>\n#15 0x55bf94bdf972 <unknown>\n#16 0x55bf94bc8e15 <unknown>\n#17 0x55bf94be0502 <unknown>\n#18 0x55bf94badd2f <unknown>\n#19 0x55bf94c04578 <unknown>\n#20 0x55bf94c04750 <unknown>\n#21 0x55bf94c1448c <unknown>\n#22 0x7f14374aba94 <unknown>\n#23 0x7f1437538a34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[{"uid":"b1fc94f8a8d3361a","name":"stdout","source":"b1fc94f8a8d3361a.txt","type":"text/plain","size":1154}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"host","value":"fv-az1771-943"},{"name":"thread","value":"2693-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastRidingCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"c56ad8917c456c64","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.11/3//#testresult/c56ad8917c456c64","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"accordion closed meta-none  \" id=\"when-and-where-should-i-put-my-bin-out\" data-order-latest=\"2408070102\" data-order-atoz=\"whenandwhereshouldiputmybinout?\">...</div> is not clickable at point (392, 583). Other element would receive the click: <div class=\"toolbar-full-width\">...</div>\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x55c175ac06ba <unknown>\n#1 0x55c175790730 <unknown>\n#2 0x55c1757e6a96 <unknown>\n#3 0x55c1757e49ad <unknown>\n#4 0x55c1757e2447 <unknown>\n#5 0x55c1757e130e <unknown>\n#6 0x55c1757d4d66 <unknown>\n#7 0x55c175802a52 <unknown>\n#8 0x55c1757d4719 <unknown>\n#9 0x55c175802c1e <unknown>\n#10 0x55c1758211ca <unknown>\n#11 0x55c1758027f3 <unknown>\n#12 0x55c1757d2ec9 <unknown>\n#13 0x55c1757d391e <unknown>\n#14 0x55c175a869eb <unknown>\n#15 0x55c175a8a972 <unknown>\n#16 0x55c175a73e15 <unknown>\n#17 0x55c175a8b502 <unknown>\n#18 0x55c175a58d2f <unknown>\n#19 0x55c175aaf578 <unknown>\n#20 0x55c175aaf750 <unknown>\n#21 0x55c175abf48c <unknown>\n#22 0x7f9cfc311a94 <unknown>\n#23 0x7f9cfc39ea34 __clone","time":{"start":1722988924297,"stop":1722988953160,"duration":28863}},{"uid":"c1e3dea959fa2a6f","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.11/2//#testresult/c1e3dea959fa2a6f","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"accordion closed meta-none  \" id=\"when-and-where-should-i-put-my-bin-out\" data-order-latest=\"2408070019\" data-order-atoz=\"whenandwhereshouldiputmybinout?\">...</div> is not clickable at point (392, 583). Other element would receive the click: <div class=\"toolbar-full-width\">...</div>\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x5610705db6ba <unknown>\n#1 0x5610702ab730 <unknown>\n#2 0x561070301a96 <unknown>\n#3 0x5610702ff9ad <unknown>\n#4 0x5610702fd447 <unknown>\n#5 0x5610702fc30e <unknown>\n#6 0x5610702efd66 <unknown>\n#7 0x56107031da52 <unknown>\n#8 0x5610702ef719 <unknown>\n#9 0x56107031dc1e <unknown>\n#10 0x56107033c1ca <unknown>\n#11 0x56107031d7f3 <unknown>\n#12 0x5610702edec9 <unknown>\n#13 0x5610702ee91e <unknown>\n#14 0x5610705a19eb <unknown>\n#15 0x5610705a5972 <unknown>\n#16 0x56107058ee15 <unknown>\n#17 0x5610705a6502 <unknown>\n#18 0x561070573d2f <unknown>\n#19 0x5610705ca578 <unknown>\n#20 0x5610705ca750 <unknown>\n#21 0x5610705da48c <unknown>\n#22 0x7f5cb8ab8a94 <unknown>\n#23 0x7f5cb8b45a34 __clone","time":{"start":1722986339532,"stop":1722986388286,"duration":48754}},{"uid":"b1415deac0cb4bc6","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.11/1//#testresult/b1415deac0cb4bc6","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"accordion closed meta-none  \" id=\"when-and-where-should-i-put-my-bin-out\" data-order-latest=\"2408061605\" data-order-atoz=\"whenandwhereshouldiputmybinout?\">...</div> is not clickable at point (392, 583). Other element would receive the click: <div class=\"toolbar-full-width\">...</div>\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x55c0a370c6ba <unknown>\n#1 0x55c0a33dc730 <unknown>\n#2 0x55c0a3432a96 <unknown>\n#3 0x55c0a34309ad <unknown>\n#4 0x55c0a342e447 <unknown>\n#5 0x55c0a342d30e <unknown>\n#6 0x55c0a3420d66 <unknown>\n#7 0x55c0a344ea52 <unknown>\n#8 0x55c0a3420719 <unknown>\n#9 0x55c0a344ec1e <unknown>\n#10 0x55c0a346d1ca <unknown>\n#11 0x55c0a344e7f3 <unknown>\n#12 0x55c0a341eec9 <unknown>\n#13 0x55c0a341f91e <unknown>\n#14 0x55c0a36d29eb <unknown>\n#15 0x55c0a36d6972 <unknown>\n#16 0x55c0a36bfe15 <unknown>\n#17 0x55c0a36d7502 <unknown>\n#18 0x55c0a36a4d2f <unknown>\n#19 0x55c0a36fb578 <unknown>\n#20 0x55c0a36fb750 <unknown>\n#21 0x55c0a370b48c <unknown>\n#22 0x7ff2e6c5ea94 <unknown>\n#23 0x7ff2e6ceba34 __clone","time":{"start":1722956723444,"stop":1722956749320,"duration":25876}}]},"tags":[]},"source":"6ea5a6e4b3936afd.json","parameterValues":["EastRidingCouncil"]}