{"uid":"ffc1bf26958af78a","name":"Validate Council Output [EastLindseyDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"519a697efdcc9e7678d3369921187d0b","time":{"start":1722986281035,"stop":1722986339467,"duration":58432},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x557e3bb246ba <unknown>\n#1 0x557e3b7f4730 <unknown>\n#2 0x557e3b843d9b <unknown>\n#3 0x557e3b844081 <unknown>\n#4 0x557e3b887cd4 <unknown>\n#5 0x557e3b866a7d <unknown>\n#6 0x557e3b8851ca <unknown>\n#7 0x557e3b8667f3 <unknown>\n#8 0x557e3b836ec9 <unknown>\n#9 0x557e3b83791e <unknown>\n#10 0x557e3baea9eb <unknown>\n#11 0x557e3baee972 <unknown>\n#12 0x557e3bad7e15 <unknown>\n#13 0x557e3baef502 <unknown>\n#14 0x557e3babcd2f <unknown>\n#15 0x557e3bb13578 <unknown>\n#16 0x557e3bb13750 <unknown>\n#17 0x557e3bb2348c <unknown>\n#18 0x7f0321fc5a94 <unknown>\n#19 0x7f0322052a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7fb19ce90220>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb19cced950>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:36: in parse_data\n    inputElement_postcode = WebDriverWait(driver, 30).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"53956afa8a9f789d6cac433da5af496d\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7fb19c25dee0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x557e3bb246ba <unknown>\nE       #1 0x557e3b7f4730 <unknown>\nE       #2 0x557e3b843d9b <unknown>\nE       #3 0x557e3b844081 <unknown>\nE       #4 0x557e3b887cd4 <unknown>\nE       #5 0x557e3b866a7d <unknown>\nE       #6 0x557e3b8851ca <unknown>\nE       #7 0x557e3b8667f3 <unknown>\nE       #8 0x557e3b836ec9 <unknown>\nE       #9 0x557e3b83791e <unknown>\nE       #10 0x557e3baea9eb <unknown>\nE       #11 0x557e3baee972 <unknown>\nE       #12 0x557e3bad7e15 <unknown>\nE       #13 0x557e3baef502 <unknown>\nE       #14 0x557e3babcd2f <unknown>\nE       #15 0x557e3bb13578 <unknown>\nE       #16 0x557e3bb13750 <unknown>\nE       #17 0x557e3bb2348c <unknown>\nE       #18 0x7f0321fc5a94 <unknown>\nE       #19 0x7f0322052a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x557e3bb246ba <unknown>\n#1 0x557e3b7f4730 <unknown>\n#2 0x557e3b843d9b <unknown>\n#3 0x557e3b844081 <unknown>\n#4 0x557e3b887cd4 <unknown>\n#5 0x557e3b866a7d <unknown>\n#6 0x557e3b8851ca <unknown>\n#7 0x557e3b8667f3 <unknown>\n#8 0x557e3b836ec9 <unknown>\n#9 0x557e3b83791e <unknown>\n#10 0x557e3baea9eb <unknown>\n#11 0x557e3baee972 <unknown>\n#12 0x557e3bad7e15 <unknown>\n#13 0x557e3baef502 <unknown>\n#14 0x557e3babcd2f <unknown>\n#15 0x557e3bb13578 <unknown>\n#16 0x557e3bb13750 <unknown>\n#17 0x557e3bb2348c <unknown>\n#18 0x7f0321fc5a94 <unknown>\n#19 0x7f0322052a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7fb19ce90220>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb19cced950>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:36: in parse_data\n    inputElement_postcode = WebDriverWait(driver, 30).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"53956afa8a9f789d6cac433da5af496d\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7fb19c25dee0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x557e3bb246ba <unknown>\nE       #1 0x557e3b7f4730 <unknown>\nE       #2 0x557e3b843d9b <unknown>\nE       #3 0x557e3b844081 <unknown>\nE       #4 0x557e3b887cd4 <unknown>\nE       #5 0x557e3b866a7d <unknown>\nE       #6 0x557e3b8851ca <unknown>\nE       #7 0x557e3b8667f3 <unknown>\nE       #8 0x557e3b836ec9 <unknown>\nE       #9 0x557e3b83791e <unknown>\nE       #10 0x557e3baea9eb <unknown>\nE       #11 0x557e3baee972 <unknown>\nE       #12 0x557e3bad7e15 <unknown>\nE       #13 0x557e3baef502 <unknown>\nE       #14 0x557e3babcd2f <unknown>\nE       #15 0x557e3bb13578 <unknown>\nE       #16 0x557e3bb13750 <unknown>\nE       #17 0x557e3bb2348c <unknown>\nE       #18 0x7f0321fc5a94 <unknown>\nE       #19 0x7f0322052a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","steps":[{"name":"Given the council","time":{"start":1722986281035,"stop":1722986281036,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1722986281036,"stop":1722986339467,"duration":58431},"status":"failed","statusMessage":"Message: \nStacktrace:\n#0 0x557e3bb246ba <unknown>\n#1 0x557e3b7f4730 <unknown>\n#2 0x557e3b843d9b <unknown>\n#3 0x557e3b844081 <unknown>\n#4 0x557e3b887cd4 <unknown>\n#5 0x557e3b866a7d <unknown>\n#6 0x557e3b8851ca <unknown>\n#7 0x557e3b8667f3 <unknown>\n#8 0x557e3b836ec9 <unknown>\n#9 0x557e3b83791e <unknown>\n#10 0x557e3baea9eb <unknown>\n#11 0x557e3baee972 <unknown>\n#12 0x557e3bad7e15 <unknown>\n#13 0x557e3baef502 <unknown>\n#14 0x557e3babcd2f <unknown>\n#15 0x557e3bb13578 <unknown>\n#16 0x557e3bb13750 <unknown>\n#17 0x557e3bb2348c <unknown>\n#18 0x7f0321fc5a94 <unknown>\n#19 0x7f0322052a34 __clone\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x557e3bb246ba <unknown>\n#1 0x557e3b7f4730 <unknown>\n#2 0x557e3b843d9b <unknown>\n#3 0x557e3b844081 <unknown>\n#4 0x557e3b887cd4 <unknown>\n#5 0x557e3b866a7d <unknown>\n#6 0x557e3b8851ca <unknown>\n#7 0x557e3b8667f3 <unknown>\n#8 0x557e3b836ec9 <unknown>\n#9 0x557e3b83791e <unknown>\n#10 0x557e3baea9eb <unknown>\n#11 0x557e3baee972 <unknown>\n#12 0x557e3bad7e15 <unknown>\n#13 0x557e3baef502 <unknown>\n#14 0x557e3babcd2f <unknown>\n#15 0x557e3bb13578 <unknown>\n#16 0x557e3bb13750 <unknown>\n#17 0x557e3bb2348c <unknown>\n#18 0x7f0321fc5a94 <unknown>\n#19 0x7f0322052a34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"c76849ebd45c944b","name":"stdout","source":"c76849ebd45c944b.txt","type":"text/plain","size":663}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1024-894"},{"name":"thread","value":"2662-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastLindseyDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"c2cdfca25099473b","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.11/1//#testresult/c2cdfca25099473b","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5630c45646ba <unknown>\n#1 0x5630c4234730 <unknown>\n#2 0x5630c4283d9b <unknown>\n#3 0x5630c4284081 <unknown>\n#4 0x5630c42c7cd4 <unknown>\n#5 0x5630c42a6a7d <unknown>\n#6 0x5630c42c51ca <unknown>\n#7 0x5630c42a67f3 <unknown>\n#8 0x5630c4276ec9 <unknown>\n#9 0x5630c427791e <unknown>\n#10 0x5630c452a9eb <unknown>\n#11 0x5630c452e972 <unknown>\n#12 0x5630c4517e15 <unknown>\n#13 0x5630c452f502 <unknown>\n#14 0x5630c44fcd2f <unknown>\n#15 0x5630c4553578 <unknown>\n#16 0x5630c4553750 <unknown>\n#17 0x5630c456348c <unknown>\n#18 0x7f411efd2a94 <unknown>\n#19 0x7f411f05fa34 __clone","time":{"start":1722956642037,"stop":1722956723379,"duration":81342}}]},"tags":[]},"source":"ffc1bf26958af78a.json","parameterValues":["EastLindseyDistrictCouncil"]}