{"uid":"31e88992117e866c","name":"Validate Council Output [GatesheadCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"3a7171e6de629587a3f0d32410302b35","time":{"start":1722988775385,"stop":1722988853024,"duration":77639},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x556df5b176ba <unknown>\n#1 0x556df57e7730 <unknown>\n#2 0x556df5836d9b <unknown>\n#3 0x556df5837081 <unknown>\n#4 0x556df587acd4 <unknown>\n#5 0x556df5859a7d <unknown>\n#6 0x556df58781ca <unknown>\n#7 0x556df58597f3 <unknown>\n#8 0x556df5829ec9 <unknown>\n#9 0x556df582a91e <unknown>\n#10 0x556df5add9eb <unknown>\n#11 0x556df5ae1972 <unknown>\n#12 0x556df5acae15 <unknown>\n#13 0x556df5ae2502 <unknown>\n#14 0x556df5aafd2f <unknown>\n#15 0x556df5b06578 <unknown>\n#16 0x556df5b06750 <unknown>\n#17 0x556df5b1648c <unknown>\n#18 0x7ff3b1ca3a94 <unknown>\n#19 0x7ff3b1d30a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7fae3ac9e020>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fae3ab1d950>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:35: in parse_data\n    accept_button = WebDriverWait(driver, timeout=30).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"048b888e4c1242a6d92f813808f2452f\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fae3a842a20>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x556df5b176ba <unknown>\nE       #1 0x556df57e7730 <unknown>\nE       #2 0x556df5836d9b <unknown>\nE       #3 0x556df5837081 <unknown>\nE       #4 0x556df587acd4 <unknown>\nE       #5 0x556df5859a7d <unknown>\nE       #6 0x556df58781ca <unknown>\nE       #7 0x556df58597f3 <unknown>\nE       #8 0x556df5829ec9 <unknown>\nE       #9 0x556df582a91e <unknown>\nE       #10 0x556df5add9eb <unknown>\nE       #11 0x556df5ae1972 <unknown>\nE       #12 0x556df5acae15 <unknown>\nE       #13 0x556df5ae2502 <unknown>\nE       #14 0x556df5aafd2f <unknown>\nE       #15 0x556df5b06578 <unknown>\nE       #16 0x556df5b06750 <unknown>\nE       #17 0x556df5b1648c <unknown>\nE       #18 0x7ff3b1ca3a94 <unknown>\nE       #19 0x7ff3b1d30a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x556df5b176ba <unknown>\n#1 0x556df57e7730 <unknown>\n#2 0x556df5836d9b <unknown>\n#3 0x556df5837081 <unknown>\n#4 0x556df587acd4 <unknown>\n#5 0x556df5859a7d <unknown>\n#6 0x556df58781ca <unknown>\n#7 0x556df58597f3 <unknown>\n#8 0x556df5829ec9 <unknown>\n#9 0x556df582a91e <unknown>\n#10 0x556df5add9eb <unknown>\n#11 0x556df5ae1972 <unknown>\n#12 0x556df5acae15 <unknown>\n#13 0x556df5ae2502 <unknown>\n#14 0x556df5aafd2f <unknown>\n#15 0x556df5b06578 <unknown>\n#16 0x556df5b06750 <unknown>\n#17 0x556df5b1648c <unknown>\n#18 0x7ff3b1ca3a94 <unknown>\n#19 0x7ff3b1d30a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7fae3ac9e020>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fae3ab1d950>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:35: in parse_data\n    accept_button = WebDriverWait(driver, timeout=30).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"048b888e4c1242a6d92f813808f2452f\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fae3a842a20>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x556df5b176ba <unknown>\nE       #1 0x556df57e7730 <unknown>\nE       #2 0x556df5836d9b <unknown>\nE       #3 0x556df5837081 <unknown>\nE       #4 0x556df587acd4 <unknown>\nE       #5 0x556df5859a7d <unknown>\nE       #6 0x556df58781ca <unknown>\nE       #7 0x556df58597f3 <unknown>\nE       #8 0x556df5829ec9 <unknown>\nE       #9 0x556df582a91e <unknown>\nE       #10 0x556df5add9eb <unknown>\nE       #11 0x556df5ae1972 <unknown>\nE       #12 0x556df5acae15 <unknown>\nE       #13 0x556df5ae2502 <unknown>\nE       #14 0x556df5aafd2f <unknown>\nE       #15 0x556df5b06578 <unknown>\nE       #16 0x556df5b06750 <unknown>\nE       #17 0x556df5b1648c <unknown>\nE       #18 0x7ff3b1ca3a94 <unknown>\nE       #19 0x7ff3b1d30a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","steps":[{"name":"Given the council","time":{"start":1722988775385,"stop":1722988775385,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1722988775385,"stop":1722988853024,"duration":77639},"status":"failed","statusMessage":"Message: \nStacktrace:\n#0 0x556df5b176ba <unknown>\n#1 0x556df57e7730 <unknown>\n#2 0x556df5836d9b <unknown>\n#3 0x556df5837081 <unknown>\n#4 0x556df587acd4 <unknown>\n#5 0x556df5859a7d <unknown>\n#6 0x556df58781ca <unknown>\n#7 0x556df58597f3 <unknown>\n#8 0x556df5829ec9 <unknown>\n#9 0x556df582a91e <unknown>\n#10 0x556df5add9eb <unknown>\n#11 0x556df5ae1972 <unknown>\n#12 0x556df5acae15 <unknown>\n#13 0x556df5ae2502 <unknown>\n#14 0x556df5aafd2f <unknown>\n#15 0x556df5b06578 <unknown>\n#16 0x556df5b06750 <unknown>\n#17 0x556df5b1648c <unknown>\n#18 0x7ff3b1ca3a94 <unknown>\n#19 0x7ff3b1d30a34 __clone\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x556df5b176ba <unknown>\n#1 0x556df57e7730 <unknown>\n#2 0x556df5836d9b <unknown>\n#3 0x556df5837081 <unknown>\n#4 0x556df587acd4 <unknown>\n#5 0x556df5859a7d <unknown>\n#6 0x556df58781ca <unknown>\n#7 0x556df58597f3 <unknown>\n#8 0x556df5829ec9 <unknown>\n#9 0x556df582a91e <unknown>\n#10 0x556df5add9eb <unknown>\n#11 0x556df5ae1972 <unknown>\n#12 0x556df5acae15 <unknown>\n#13 0x556df5ae2502 <unknown>\n#14 0x556df5aafd2f <unknown>\n#15 0x556df5b06578 <unknown>\n#16 0x556df5b06750 <unknown>\n#17 0x556df5b1648c <unknown>\n#18 0x7ff3b1ca3a94 <unknown>\n#19 0x7ff3b1d30a34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5daabd6d9b052dc6","name":"stdout","source":"5daabd6d9b052dc6.txt","type":"text/plain","size":653}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az773-320"},{"name":"thread","value":"2703-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GatesheadCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"563edc05e22c4062","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.11/2//#testresult/563edc05e22c4062","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x557b500066ba <unknown>\n#1 0x557b4fcd6730 <unknown>\n#2 0x557b4fd25d9b <unknown>\n#3 0x557b4fd26081 <unknown>\n#4 0x557b4fd69cd4 <unknown>\n#5 0x557b4fd48a7d <unknown>\n#6 0x557b4fd671ca <unknown>\n#7 0x557b4fd487f3 <unknown>\n#8 0x557b4fd18ec9 <unknown>\n#9 0x557b4fd1991e <unknown>\n#10 0x557b4ffcc9eb <unknown>\n#11 0x557b4ffd0972 <unknown>\n#12 0x557b4ffb9e15 <unknown>\n#13 0x557b4ffd1502 <unknown>\n#14 0x557b4ff9ed2f <unknown>\n#15 0x557b4fff5578 <unknown>\n#16 0x557b4fff5750 <unknown>\n#17 0x557b5000548c <unknown>\n#18 0x7f86bed1aa94 <unknown>\n#19 0x7f86beda7a34 __clone","time":{"start":1722986205441,"stop":1722986263442,"duration":58001}},{"uid":"e6ae04886e172849","reportUrl":"https://Nextures.github.io/UKBinCollectionData/3.11/1//#testresult/e6ae04886e172849","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5556b46926ba <unknown>\n#1 0x5556b4362730 <unknown>\n#2 0x5556b43b1d9b <unknown>\n#3 0x5556b43b2081 <unknown>\n#4 0x5556b43f5cd4 <unknown>\n#5 0x5556b43d4a7d <unknown>\n#6 0x5556b43f31ca <unknown>\n#7 0x5556b43d47f3 <unknown>\n#8 0x5556b43a4ec9 <unknown>\n#9 0x5556b43a591e <unknown>\n#10 0x5556b46589eb <unknown>\n#11 0x5556b465c972 <unknown>\n#12 0x5556b4645e15 <unknown>\n#13 0x5556b465d502 <unknown>\n#14 0x5556b462ad2f <unknown>\n#15 0x5556b4681578 <unknown>\n#16 0x5556b4681750 <unknown>\n#17 0x5556b469148c <unknown>\n#18 0x7f5209ac8a94 <unknown>\n#19 0x7f5209b55a34 __clone","time":{"start":1722956550193,"stop":1722956610234,"duration":60041}}]},"tags":[]},"source":"31e88992117e866c.json","parameterValues":["GatesheadCouncil"]}